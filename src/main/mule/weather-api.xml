<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd">
    <http:listener-config name="weather-api-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="weather-api-config" api="resource::4c9e5421-c393-49cb-83a2-b87b488c95ad:weather-api:1.0.3:raml:zip:weather-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <http:request-config name="openweather" doc:name="HTTP Request configuration" doc:id="76670065-807e-437d-ad07-71854107d8ac">
        <http:request-connection protocol="HTTPS" host="api.openweathermap.org" port="443" />
    </http:request-config>
    <api-gateway:autodiscovery apiId="20162430" ignoreBasePath="true" doc:name="API Autodiscovery" doc:id="16800e68-a731-4d6d-bf2a-f364fa8e5ddf" flowRef="weather-api-main" />
	<flow name="weather-api-main">
        <http:listener config-ref="weather-api-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="weather-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="weather-api-console" initialState="stopped">
        <http:listener config-ref="weather-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="weather-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\forecast:weather-api-config">
        <set-variable value="#[attributes.queryParams.dateTime as Date {format: &quot;MMMM dd, yyyy&quot;} as Date ++ &quot;T00:00:00Z&quot;]" doc:name="Change Date Format" doc:id="59269a62-affb-4d8a-a3c5-f8aa05738cd3" variableName="newDateFormat" />
        <set-variable value="#[%dw 2.0&#xA;output application/json&#xA;fun toUnixTimestamp(isoDate: String) = &#xA;    ((isoDate as DateTime) as Number {unit: &quot;milliseconds&quot;}) / 1000&#xA;---&#xA;toUnixTimestamp(vars.newDateFormat)]" doc:name="Set Forecast Date" doc:id="ab9b4e23-d20b-4ab2-9e10-f24843ecff5d" variableName="forecastDate" />
        <set-variable value="#[daysBetween(now(),vars.newDateFormat)]" doc:name="calculateDays" doc:id="f79af425-808a-4130-8ef6-ad63224f520c" variableName="numberOfDays" />
        <set-variable value="#[attributes.queryParams.city]" doc:name="Set City" doc:id="3d9f4e57-32e6-4c66-b9c3-f49b6c2c654b" variableName="city"/>
		<http:request method="GET" doc:name="getGeoData" doc:id="1b3ca495-a10d-4b3e-b5c8-4337cbdd38d6" config-ref="openweather" path="/geo/1.0/direct">
            <http:query-params><![CDATA[#[output application/java
---
{
	"appid" : "c18f774f7f9965c2dd17c2ffbda52e7b",
	"q" : attributes.queryParams.city ++ ", " ++ attributes.queryParams.countryCode,
	"limit" : 5
}]]]></http:query-params>
        </http:request>
        <ee:transform doc:name="Transform Message" doc:id="7c870d2d-0c27-46cc-b9ce-3f05e69974a6">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{ 
  city: payload.name[0],
  lat: payload.lat[0],
  long: payload.lon[0]
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <http:request method="GET" doc:name="getForecast" doc:id="b8db9d2d-fb34-4584-a951-0e21069ff368" config-ref="openweather" path="/data/3.0/onecall">
            <http:query-params><![CDATA[#[output application/java
---
{
	"appid" : "c18f774f7f9965c2dd17c2ffbda52e7b",
	"dt" : vars.forecastDate,
	"lat" : payload.lat,
	"lon" : payload.long
}]]]></http:query-params>
        </http:request>
        <ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[/* %dw 2.0
output application/json
---
{
	"city" : vars.city,
	"date" : (payload.daily.dt[vars.numberOfDays] as Number) as DateTime as Date,
	"temperature" : ((payload.daily.temp.day[vars.numberOfDays] - 273.15) * 100) / 100 as Number,
	"humidity" : payload.daily[vars.numberOfDays].humidity,
	"summary" : payload.daily[vars.numberOfDays].summary
}
 */


%dw 2.0
output application/json
var dayIndex = vars.numberOfDays
var dailyData = payload.daily[dayIndex]
---
{
    city: vars.city,
    date: dailyData.dt as DateTime as Date,
    temperature: round((dailyData.temp.day - 273.15) * 100) / 100,
    humidity: dailyData.humidity,
    summary: dailyData.summary
}
]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
</mule>
